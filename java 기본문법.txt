자바 초반
public : 접근 제어자: 누구나 이 클래스를 쓸 수 있게 허용한다는 뜻
class: 자바에서 코드를 담는 기본 단위(틀), 객체를 만들기 위한 구조
Main: 클래스 이름. 관례상 자바 파일 이름과 같아야 함(Main.java)
{: 블록 시작: 클래스의 내용을 감싸는 여는 중괄호

ex: public class Main { //  여기는 누구나 사용할 수 있는 Main 이라는 클래스.
-------------------------------------------------------------------
public: 누구나 이 main() 메서드에 접근할 수 있어야 하므로 사용
static: 객체를 만들지 않아도 쓸 수 있는 메서드란 뜻
void: 이 메서드는 **아무것도 반환하지 않는다(return 값이 없다)**는 뜻
main: 메서드에 넘겨줄 값을 담는 괄호. 여기에 인자를 넣을 수 있음
String[] args: 문자열 배열 이름이 args인 매개변수

ex: public static void main(String[] args) { // 프로그램이 실행될 때 제일 먼저 실행되는 메서드
------------------------------------------------------------------
System: 자바에서 제공하는 시스템 관련 클래스
out: System 클래스 안의 출력 스트림 객체(콘솔 출력 담당)
println: print line -> 출력하고 줄 바꿈까지 해줌
("..."); : 큰따옴표로 감싼 문자열(텍스트)
------------------------------------------------------------------
# 기본 문법: if
if: 조건을 검사하는 키워드
(조건식): 비교나 논리 연산이 들어감 (결과는 true/false)
{ }: 조건이 맞을 때 실행할 코드 블록
## if + else 문
if (조건식) {
// 조건이 참일 때 실행
} else {
//조건이 거짓일 때 실행
}
예제
public class Main {
    public static void main(String[] args) {
        int age = 18;

        if (age >= 20) {
            System.out.println("성인입니다.");
        } else {
            System.out.println("미성년자입니다.");
        }
    }
}
해설 age >= 20 : 나이가 20 이상이면 true
      System.out.println(...): 조건에 따라 다른 문장을 출력
------------------------------------------------------------------
if ~ else if ~ else 기본 구조
if (조건1) {
    // 조건1이 참일 때 실행
} else if (조건2) {
    // 조건2가 참일 때 실행
} else {
    // 위 조건들이 모두 거짓일 때 실행
}
예제: 
int score = 85;

if (score >= 90) {
    System.out.println("A등급입니다.");
} else if (score >= 80) {
    System.out.println("B등급입니다.");
} else if (score >= 70) {
    System.out.println("C등급입니다.");
} else {
    System.out.println("F등급입니다.");
}
실행 결과 (score = 85): B등급입니다.
-----------------------------------------------------------------
반복문이란: 반복문은 특정 코드를 여허번 실행할 때 사용
예를 들어 "안녕하세요" 를 5번 출력하고 싶다면, 반복문 없이 일일이  쓰기 힘듬
for (초기값; 조건; 증감) {
    // 반복해서 실행할 코드
}
초기값: 반복할 때 쓸 변수 초기화 (int i = 0)
조건: 반복을 계속할 조건 (i < 5)
증감: 반복 변수 증감 (i++는 i = i + 1)
예제:
public class Main {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println("안녕하세요");
        }
    }
}
실행결과: 안녕하세요 안녕하세요 안녕하세요 안녕하세요 안녕하세요
1. i++ 와 ++i 차이
i++ 는 후위 증가 연산자
→ 현재 값 사용하고, 나중에 1 증가

++i 는 전위 증가 연산자
→ 먼저 1 증가하고, 증가된 값 사용
-----------------------------------------------------------------
🔄 1. while문 기본 구조
java
복사
편집
while (조건식) {
    // 조건이 참인 동안 반복 실행할 코드
}
조건이 참(true) 인 동안 계속 반복

조건이 거짓이 되면 반복 종료
예제:
🔹 예제: 1부터 5까지 출력하기

public class Main {
    public static void main(String[] args) {
        int i = 1;
        while (i <= 5) {
            System.out.println(i);
            i++;  // 꼭 증가시켜야 무한 반복 안 걸림!
        }
    }
}
🧠 설명
i = 1 부터 시작

while (i <= 5)가 참일 동안 출력

i++로 1씩 증가시켜서 반복 종료 조건을 맞춤
✅ 함께 알아두면 좋은 복합 대입 연산자들
연산자	의미
+=	더해서 대입 (a = a + b)
-=	빼서 대입 (a = a - b)
*=	곱해서 대입 (a = a * b)
/=	나눠서 대입 (a = a / b)
%=	나머지 대입 (a = a % b)
-----------------------------------------------------------------
🧾 1. Scanner가 뭐야?
Scanner는 자바에서 사용자로부터 입력을 받기 위한 도구
예: 숫자 입력, 문자열 입력 등
🔧 2. Scanner 쓰는 기본 형식
import java.util.Scanner;  // Scanner 클래스 불러오기

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);  // Scanner 객체 만들기

        System.out.print("숫자를 입력하세요: ");
        int num = sc.nextInt();  // 정수 입력 받기

        System.out.println("입력한 숫자: " + num);
    }
}
🔑 주요 입력 함수
입력 함수	설명
nextInt()	정수 입력 받기
nextDouble()	실수 입력 받기
next()	단어 하나 입력 받기 (공백 전까지)
nextLine()	한 줄 전체 입력 받기 (문장 등)